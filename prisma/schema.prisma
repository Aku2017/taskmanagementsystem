// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}




// Define the User entity
model User {
  id        String   @id @default(uuid()) // Change id type to String
  username  String
  name      String   @db.VarChar(100)
  email     String   @unique @db.VarChar(45)
  password  String   @db.VarChar(100)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  // Define a one-to-many relationship with tasks
  tasks     Task[]
  notifications          Notification[]
  notificationFrequency  NotificationFrequency?
  
}

// Task entity
model Task {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  isCompleted Boolean  @default(false)
  status      TaskStatus
  startDate   DateTime?
  endDate     DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // many-to-one relationship with user
  user        User     @relation(fields: [userId], references: [id])
  userId      String   // Change the type to String for Guid
}


model Notification {
  id          Int                 @id @default(autoincrement())
  message     String
  createdAt   DateTime            @default(now())
  user        User                @relation(fields: [userId], references: [id])
  userId      String
  frequency   NotificationFrequency
}

enum TaskStatus {
  PENDING
  NOT_STARTED
  STARTED
  COMPLETED
  IN_PROGRESS
}

enum NotificationFrequency {
  DAILY
  BI_WEEKLY
  HOURLY
  SYSTEM_DEFAULT
}
